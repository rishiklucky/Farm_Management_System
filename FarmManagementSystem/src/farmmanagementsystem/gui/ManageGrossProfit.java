/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * ManageGrossProfit.java
 *
 * Created on Nov 21, 2013, 4:15:53 AM
 */
package farmmanagementsystem.gui;

import farmmanagementsystem.db.DBQuery;
import farmmanagementsystem.gui.add.AddGrossProfit;
import farmmanagementsystem.gui.update.UpdateGrossProfit;
import farmmanagementsystem.model.GrossProfit;
import farmmanagementsystem.model.Location;
import farmmanagementsystem.model.User;
import farmmanagementsystem.util.Print;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManageGrossProfit extends javax.swing.JDialog {

    private DBQuery totalgross = new DBQuery();
    private double totalGross;
    private static double gross = 0.00;
    private static double netProfit = 0.00;

    /**
     * Creates new form ManageGrossProfit
     */
    public ManageGrossProfit(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jComboBoxLocation.setModel(new DefaultComboBoxModel(getArraylocation()));
        setLocationRelativeTo(null);
        loadTable();
        jLabelTotalGross.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalGross())));
        jLabelTotalNetIncome.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalShare())));
    }
    private ArrayList<GrossProfit> list;
    public User user;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxLocation = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelTotalGross = new javax.swing.JLabel();
        jLabelTotalNetIncome = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MANAGE GROSS PROFIT");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Gross Profit No", "Location ID", "Address ", "Gross", "Owner Share (Net Income)", "Date of Payment", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(25);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(90);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(90);
            jTable1.getColumnModel().getColumn(1).setMinWidth(70);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(70);
            jTable1.getColumnModel().getColumn(2).setMinWidth(250);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(250);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setMinWidth(200);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(200);
        }

        jButton1.setText("NEW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("UPDATE / VIEW");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButton2.setText("PRINT GROSS PROFITS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("SEARCH BY LOCATION");

        jComboBoxLocation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBoxLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLocationActionPerformed(evt);
            }
        });
        jComboBoxLocation.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBoxLocationPropertyChange(evt);
            }
        });

        jLabel2.setText("Total Gross:");

        jLabel3.setText("Total Net Income:");

        jLabelTotalGross.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelTotalNetIncome.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Start Date:");

        jLabel5.setText("End Date:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1204, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelTotalGross, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(45, 45, 45)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(jLabelTotalNetIncome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButton2)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalGross, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalNetIncome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "NO SELECTED ITEM", "EMPTY SELECTION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        UpdateGrossProfit ugp = new UpdateGrossProfit(null, true);
        ugp.user = user;
        ugp.setGrossProfit(list.get(jTable1.getSelectedRow()));

        ugp.setVisible(true);
        int sel = jTable1.getSelectedRow();
        loadTable();
        jTable1.setRowSelectionInterval(sel, sel);
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddGrossProfit agp = new AddGrossProfit(null, true);
        agp.user = user;
        if (!agp.invalid) {
            agp.setVisible(true);
            loadTable();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        printGrossProfit();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBoxLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLocationActionPerformed
        Location sel = ((Loc) jComboBoxLocation.getSelectedItem()).location;
        if (sel == null) {
            if ((jDateChooser1.getDate() == null) && (jDateChooser2.getDate() == null)) {
                loadTable();
                jLabelTotalGross.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalGross())));
                jLabelTotalNetIncome.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalShare())));

            } else {

                DBQuery.setStartDate(new java.sql.Date(jDateChooser1.getDate().getTime()).toString());
                DBQuery.setEndDate(new java.sql.Date(jDateChooser2.getDate().getTime()).toString());
                loadTableWithDatePar();
                jLabelTotalGross.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalGross())));
                jLabelTotalNetIncome.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalShare())));
            }

        } else {
            if ((jDateChooser1.getDate() != null) && (jDateChooser2.getDate() != null)) {
                DBQuery.setStartDate(new java.sql.Date(jDateChooser1.getDate().getTime()).toString());
                DBQuery.setEndDate(new java.sql.Date(jDateChooser2.getDate().getTime()).toString());
                loadTablebyLocationDatePar(sel);
                jLabelTotalGross.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalGross())));
                jLabelTotalNetIncome.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalShare())));

            } else {
                loadTablebyLocation(sel);
                jLabelTotalGross.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalGross())));
                jLabelTotalNetIncome.setText(String.valueOf(String.format("%,.2f", DBQuery.getTotalShare())));
            }

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxLocationActionPerformed

    private void jComboBoxLocationPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBoxLocationPropertyChange


    }//GEN-LAST:event_jComboBoxLocationPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ManageGrossProfit dialog = new ManageGrossProfit(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox jComboBoxLocation;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelTotalGross;
    private javax.swing.JLabel jLabelTotalNetIncome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
        tbl.setRowCount(0);
        list = DBQuery.getGrossProfit();
        for (GrossProfit gp : list) {
            tbl.addRow(new Object[]{gp.getGp_id(), gp.getLocation().getLoc_id(), gp.getLocation().getAddress(), String.format("%,.2f", gp.getGross_amount()), String.format("%,.2f", gp.getOwner_share()), String.format("%1$tb %1$td, %1$tY\n", gp.getDate()), gp.getRemarks()});

        }

    }

    private void loadTableWithDatePar() {
        DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
        tbl.setRowCount(0);
        list = DBQuery.getGrossProfitWithDate();
        for (GrossProfit gp : list) {
            tbl.addRow(new Object[]{gp.getGp_id(), gp.getLocation().getLoc_id(), gp.getLocation().getAddress(), String.format("%,.2f", gp.getGross_amount()), String.format("%,.2f", gp.getOwner_share()), String.format("%1$tb %1$td, %1$tY\n", gp.getDate()), gp.getRemarks()});

        }

    }

    private void loadTablebyLocation(Location sel) {
        DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
        tbl.setRowCount(0);
        list = DBQuery.getGrossProfitbyLocation(sel);
        for (GrossProfit gp : list) {
            tbl.addRow(new Object[]{gp.getGp_id(), gp.getLocation().getLoc_id(), gp.getLocation().getAddress(), String.format("%,.2f", gp.getGross_amount()), String.format("%,.2f", gp.getOwner_share()), String.format("%1$tb %1$td, %1$tY\n", gp.getDate()), gp.getRemarks()});
        }

    }

    private void loadTablebyLocationDatePar(Location sel) {
        DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
        tbl.setRowCount(0);
        list = DBQuery.getGrossProfitbyLocationWithDatePar(sel);
        for (GrossProfit gp : list) {
            tbl.addRow(new Object[]{gp.getGp_id(), gp.getLocation().getLoc_id(), gp.getLocation().getAddress(), String.format("%,.2f", gp.getGross_amount()), String.format("%,.2f", gp.getOwner_share()), String.format("%1$tb %1$td, %1$tY\n", gp.getDate()), gp.getRemarks()});
        }

    }

    public void printGrossProfit() {
        Print pp = new Print();
        String header = "(center)(bold)CALVEZ FARM\n"
                + "(center)(bold)Worker Information System \n\n"
                + "(center)(bold)" + "GROSS PROFIT" + "\n\n"
                + "(center)" + "As of " + String.format("%1$TB %1$Td, %1$TY\n", new Date()) + "\n"
                + "(center)" + "Gross Total:  " + DBQuery.getTotalGross() + "\n"
                + "(center)" + "Total Net Income:  " + DBQuery.getTotalShare() + "\n"
                + "(bold)No. of Results:(tab)" + list.size() + "\n";
        header += "NOTE:__________________________________________________________________\n";

        pp.setHeaderText(header);
        pp.showPreview(jTable1, this);
    }

    private Object[] getArraylocation() {
        ArrayList<Loc> l = new ArrayList();
        ArrayList<Location> tmp = DBQuery.getLocation();
        l.add(new Loc());
        for (Location t : tmp) {
            l.add(new Loc(t));
        }
        return l.toArray();
    }

    /**
     * @return the totalGross
     */
    public double getTotalGross() {
        return totalGross;
    }

    /**
     * @param totalGross the totalGross to set
     */
    public void setTotalGross(double totalGross) {
        this.totalGross = totalGross;
    }

    class Loc {

        public Location location;

        public Loc() {
            //location = l;
        }

        public Loc(Location l) {
            location = l;
        }

        public String toString() {
            if (location == null) {
                return "Show All";
            }
            return location.getAddress();
        }
    }

    private void selectGrossAndNet() {
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            Object g = jTable1.getValueAt(i, 3);
//            double gl = Double.parseDouble(g.format("%,.2f",g));
//            gross = gross + gl;
//            System.out.print("g" + g);
        }

        jLabelTotalGross.setText(String.valueOf(gross));
    }
}
