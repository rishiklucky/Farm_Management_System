/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AddExpense.java
 *
 * Created on Dec 6, 2013, 6:51:39 AM
 */

package farmmanagementsystem.gui.update;


import farmmanagementsystem.db.DBQuery;
import farmmanagementsystem.gui.NewExpenseItem;
import farmmanagementsystem.model.Expenses;
import farmmanagementsystem.model.Location;
import farmmanagementsystem.model.User;
import farmmanagementsystem.util.LookAndFeels;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class UpdateExpense extends javax.swing.JDialog {

    /** Creates new form AddExpense */
    public UpdateExpense(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        new LookAndFeels(this, 3);
        jComboBoxLocation.setModel(new DefaultComboBoxModel(DBQuery.getLocation().toArray()));        
    }

    public User user;
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabeltotal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabelLocationAddress = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel3 = new javax.swing.JLabel();
        jLabelMaintenancePerson = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBoxLocation = new javax.swing.JComboBox();
        jButtonNew = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonSAVE = new javax.swing.JButton();
        jButtonCANCEL = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("UPDATE EXPENSES");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Remarks", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setMinWidth(80);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(80);

        jLabeltotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabeltotal.setText("00.00");

        jLabel4.setText("Maintenance Person:");

        jLabel1.setText("Location ID:");

        jLabelLocationAddress.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelLocationAddress.setText("(Address)");

        dateChooserCombo1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

        jLabel3.setText("Reference:");

        jLabelMaintenancePerson.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabelMaintenancePerson.setText("(Maintainer)");

        jLabel5.setText("TOTAL:");

        jLabel2.setText("DATE:");

        jComboBoxLocation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLocation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxLocationItemStateChanged(evt);
            }
        });

        jButtonNew.setText("NEW ITEM");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonRemove.setText("REMOVE");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelMaintenancePerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabelLocationAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabeltotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(dateChooserCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jComboBoxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelLocationAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMaintenancePerson)
                            .addComponent(jLabel4))))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jLabeltotal))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonSAVE.setText("SAVE");
        jButtonSAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSAVEActionPerformed(evt);
            }
        });

        jButtonCANCEL.setText("CANCEL");
        jButtonCANCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCANCELActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jButtonSAVE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCANCEL))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSAVE)
                    .addComponent(jButtonCANCEL))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxLocationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxLocationItemStateChanged
        jLabelMaintenancePerson.setText(((Location)jComboBoxLocation.getSelectedItem()).getCareTaker().getName());
        jLabelLocationAddress.setText(((Location)jComboBoxLocation.getSelectedItem()).getAddress());
}//GEN-LAST:event_jComboBoxLocationItemStateChanged

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        NewExpenseItem item = new NewExpenseItem(null, true);
        item.setVisible(true);
        if(item.submit){
            if(isExistInTable(item.remarks)){
                JOptionPane.showMessageDialog(null, "ITEM ALREADY ON THE LIST", "DUPLICATION", JOptionPane.ERROR_MESSAGE);
                return;
            }
            DefaultTableModel tbl = (DefaultTableModel)jTable1.getModel();
            tbl.addRow(new Object[]{item.remarks,item.amount});
            jTable1.updateUI();
            setTotal();
        }
        
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        int i = jTable1.getSelectedRow();
        if(i<0){
            JOptionPane.showMessageDialog(null, "NO SELECTED ITEM", "EMPTY SELECTION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(confirm("REMOVE SELECTED ITEM?")){
            DefaultTableModel tbl = (DefaultTableModel)jTable1.getModel();
            tbl.removeRow(i);
            jTable1.updateUI();
            setTotal();
        }
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonSAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSAVEActionPerformed
        if(jTextField1.getText().isEmpty() || jTable1.getRowCount()<=0){
            JOptionPane.showMessageDialog(null, "INVALID ENTRY", "INVALID DATA", JOptionPane.ERROR_MESSAGE);
            return;            
        }

        if(!DBQuery.getExpensesByRef(jTextField1.getText()).isEmpty()&& !list.get(0).getReference().contentEquals(jTextField1.getText())){
            JOptionPane.showMessageDialog(null, "Reference Already Exist", "DUPLICATION OF REFERENCE", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(!hasChanges()){
            JOptionPane.showMessageDialog(null, "NO CHANGES HAS BEEN MADE.", "UPDATE ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(confirm("SAVE EXPENSES")){
            Date d = dateChooserCombo1.getSelectedDate().getTime();
            int loc = ((Location)jComboBoxLocation.getSelectedItem()).getLoc_id();
            String ref = jTextField1.getText();
            for(int i=0; i<jTable1.getRowCount();i++){
                double val = Double.parseDouble(jTable1.getValueAt(i, 1).toString());                
                String rem = jTable1.getValueAt(i, 0).toString();
                Expenses e = new Expenses();
                e.setAmount(val);
                e.setDate(d);
                e.setGp_id(0);
                e.setLoc_id(loc);
                e.setPosted(false);
                e.setReference(ref);
                e.setRemarks(rem);
                DBQuery.addExpense(e);
            }
            removeExpense();
            JOptionPane.showMessageDialog(null, "TRANSACTION SAVED", "SAVED", JOptionPane.INFORMATION_MESSAGE);
            if(oldRef.contentEquals(ref))
                DBQuery.insertLog(user.getUser_id(), "EXPENSES UPDATE [Ref No: "+ref+"]");
            else
                DBQuery.insertLog(user.getUser_id(), "EXPENSES UPDATE [Ref No: "+oldRef+" -> Ref No: "+ref+"]");
            submit = true;
            dispose();
        }
    }//GEN-LAST:event_jButtonSAVEActionPerformed

    public boolean submit = false;
    private void jButtonCANCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCANCELActionPerformed
        if(confirm("CANCEL EXPENSE?")){
            dispose();
        }
    }//GEN-LAST:event_jButtonCANCELActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateExpense dialog = new UpdateExpense(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButtonCANCEL;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSAVE;
    private javax.swing.JComboBox jComboBoxLocation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelLocationAddress;
    private javax.swing.JLabel jLabelMaintenancePerson;
    private javax.swing.JLabel jLabeltotal;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    
    private boolean confirm(String confirmMessage){
        int ans = JOptionPane.showConfirmDialog(this, confirmMessage, "CONFIRMATION", JOptionPane.YES_NO_OPTION);
        return (ans == JOptionPane.YES_OPTION);
    }

    private void setTotal(){
      DefaultTableModel tbl = (DefaultTableModel)jTable1.getModel();
      double tmp = 0.0;
      for(int i=0; i<tbl.getRowCount();i++){
          tmp +=(Double)tbl.getValueAt(i, 1);
      }
      jLabeltotal.setText(String.format("%,.2f", tmp));
    }

    private ArrayList<Expenses> list;
    private int selectedINDEX;

    private String oldRef;
    public void setExpenses(String ref){
        oldRef = ref;
        list = DBQuery.getExpensesByRef(ref);
        Calendar c = Calendar.getInstance();
        c.setTime(list.get(0).getDate());
        dateChooserCombo1.setSelectedDate(c);

        for(int i =0 ; i<jComboBoxLocation.getItemCount(); i++){
            if(((Location)jComboBoxLocation.getItemAt(i)).getLoc_id() == list.get(0).getLoc_id()){
                jComboBoxLocation.setSelectedIndex(i);
                selectedINDEX = i;
                break;
            }
        }
        jTextField1.setText(ref);

        DefaultTableModel tbl=(DefaultTableModel) jTable1.getModel();
        tbl.setRowCount(0);
        for(Expenses e:list){
            tbl.addRow(new Object[]{e.getRemarks(),e.getAmount()});
        }
        setTotal();
    }

    private boolean hasChanges(){
        String d = String.format("%1$tb %1$te, %1$tY",list.get(0).getDate());
        String f = String.format("%1$tb %1$te, %1$tY",dateChooserCombo1.getSelectedDate().getTime());
        if(!f.contentEquals(d))
            return true;
        if(jComboBoxLocation.getSelectedIndex() != selectedINDEX)
            return true;
        if(!jTextField1.getText().contentEquals(list.get(0).getReference()))
            return true;
        if(jTable1.getRowCount() != list.size())
            return true;
    
        for(int i=0; i<list.size();i++){
            boolean found = false;
            for(int j = 0; j<list.size();j++){
                double val = Double.parseDouble(jTable1.getValueAt(j, 1).toString());
                String rem = (String) jTable1.getValueAt(j, 0);
                if(val == list.get(i).getAmount() && rem.contentEquals(list.get(i).getRemarks()))
                    found = true;
            }
            if(!found){
                return true;
            }
        }
        return false;
    }

    private boolean isExistInTable(String remarks){

        for(int i=0; i<jTable1.getRowCount();i++){
            if(jTable1.getValueAt(i, 0).toString().contentEquals(remarks))
                return true;
        }
        return false;
    }

    private void removeExpense(){
        for(Expenses e :list){
            DBQuery.deleteExpenses(e.getExp_id());
        }
    }
}
