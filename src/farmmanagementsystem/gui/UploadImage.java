/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI_Upload_Image.java
 *
 * Created on Aug 10, 2013, 9:47:26 PM
 */

package farmmanagementsystem.gui;


import farmmanagementsystem.util.ComponentHouseResizer;
import farmmanagementsystem.util.LookAndFeels;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author admin
 */
public class UploadImage extends javax.swing.JDialog {

    private BufferedImage thumbnail = null;

    private ImagePackage img = null;
    public ImagePackage getSelectedImage(){
        return img;
    }
    public ImagePackage getNewImagePackage(){
            return new ImagePackage();
    }

    /** Creates new form GUI_Upload_Image */
    public UploadImage(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        LookAndFeels LF = new LookAndFeels(this, 3);
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "JPG, PNG & GIF Images", "jpg","jpeg","png", "gif");
         chooser.setFileFilter(filter);
         setLocationRelativeTo(null);
    }

    public UploadImage() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooser = new javax.swing.JFileChooser();
        jLabelIMAGE = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Stock Image");
        setIconImage(null);

        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setDialogTitle("");
        chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooserActionPerformed(evt);
            }
        });
        chooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                chooserPropertyChange(evt);
            }
        });

        jLabelIMAGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmmanagementsystem/images/POSITION.png")));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelIMAGE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabelIMAGE, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooserActionPerformed
      if(evt.getActionCommand().equals(JFileChooser.APPROVE_SELECTION)){
          if(thumbnail != null)
              dispose();          
        }else{
            System.out.println(" ");
            thumbnail = null;
            dispose();
        }
    }//GEN-LAST:event_chooserActionPerformed

    private void chooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_chooserPropertyChange
        try {
            if (evt.getPropertyName().contentEquals("SelectedFileChangedProperty")) {
                File file = chooser.getSelectedFile();
                if (file != null) {
                    BufferedImage image = ImageIO.read(file);                    
                    thumbnail = ComponentHouseResizer.resizeImageWithHint(image, jLabelIMAGE.getWidth(), jLabelIMAGE.getHeight());
                    img = new ImagePackage(file, thumbnail);
                    jLabelIMAGE.setPreferredSize(new Dimension(thumbnail.getWidth(), thumbnail.getHeight()));
                    jLabelIMAGE.setSize(new Dimension(thumbnail.getWidth(), thumbnail.getHeight()));
                    jLabelIMAGE.setIcon(new ImageIcon(thumbnail));
                } else {
                    thumbnail = null;
                    jLabelIMAGE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/farmmanagementsystem/images/POSITION.png")));
                }
            }
        } catch (IOException ex) {
            System.out.println("ERROR");
        }
    }//GEN-LAST:event_chooserPropertyChange

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UploadImage dialog = new UploadImage(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser chooser;
    private javax.swing.JLabel jLabelIMAGE;
    // End of variables declaration//GEN-END:variables

    public class ImagePackage{

        private File file;
        private BufferedImage thumbnail;

        public ImagePackage(File file, BufferedImage thumbnail) {
            this.file = file;
            this.thumbnail = thumbnail;
        }

        public ImagePackage() {
        }

        
        public ImagePackage(File file) {
            try {
                this.file = file;
                thumbnail = ImageIO.read(file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        

        public File getFile() {
            return file;
        }

        public void setFile(File file) {
            this.file = file;
        }

        public BufferedImage getThumbnail() {
            return thumbnail;
        }

        public void setThumbnail(BufferedImage thumbnail) {
            this.thumbnail = thumbnail;
        }
        
        public String getPath(){
            return file.getPath();
        }

        public String writeTo(String path){
            try {
                String dest = path+".dll",format = "png";
                File f = new File(dest);
                ImageIO.write(ImageIO.read(file), format, f);
                return dest;
            } catch (IOException ex) {
                ex.getMessage();
            }
            return null;
        }
        public String writeThumbnailTo(String path){
            try {
                String dest = path+".dll",format = "png";
                File f = new File(dest);
                ImageIO.write(thumbnail, format, f);
                return dest;
            } catch (IOException ex) {
                ex.getMessage();
            }
            return null;
        }

        public BufferedImage getImage() {
            try {
                return ImageIO.read(file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
            return null;
        }

        public void deleteFile(){
            file.delete();
        }

    }
}
